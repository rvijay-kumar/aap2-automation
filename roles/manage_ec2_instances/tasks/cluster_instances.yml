---
- name: Create EC2 instances for ansible node (control node)
  amazon.aws.ec2_instance:
    key_name: "{{ ec2_name_prefix }}-key"
    security_group: "{{ ec2_security_group }}"
    instance_type: "{{ ec2_info[control_type].size }}"
    image_id: "{{ ansible_control_node_ami.image_id }}"
    region: "{{ ec2_region }}"
    exact_count: "{{ student_total }}"
    state: running
    filters:
      "tag:Workshop_ansible": "{{ ec2_name_prefix }}-ansible-{{ sequence }}"
      instance-state-name: running
    tags:
      Workshop_ansible: "{{ ec2_name_prefix }}-ansible-{{ sequence }}"
      Workshop: "{{ ec2_name_prefix }}"
      Workshop_type: "{{ workshop_type }}"
      AWS_USERNAME: "{{ aws_user }}"
      owner: "{{ aws_user }}"
      Info: "AWS_USERNAME that provisioned this-> {{ aws_user }}"
      Ansible_Workshops: "This was provisioned through the ansible workshops provisioner"
      Students: "{{ student_total }}"
      username: "{{ ec2_info[control_type].username }}"
      short_name: "ansible-{{ sequence }}"
      ansible-workshops: "true"
    wait: "{{ ec2_wait }}"
    network:
      assign_public_ip: true
    vpc_subnet_id: "{{ ec2_vpc_subnet_id }}"
    volumes:
      - device_name: /dev/sda1
        ebs:
          volume_type: "{{ ec2_info[control_type].disk_volume_type }}"
          volume_size: "{{ ec2_info[control_type].disk_space }}"
          iops: "{{ ec2_info[control_type].disk_iops }}"
          throughput: "{{ ec2_info[control_type].disk_throughput }}"
          delete_on_termination: true
  register: control_output

- name: grab instance ids to tag them all
  amazon.aws.ec2_instance_info:
    region: "{{ ec2_region }}"
    filters:
      instance-state-name: running
      "tag:Workshop_ansible": "{{ ec2_name_prefix }}-ansible-{{ sequence }}"
  register: control_output

- name: Ensure tags are present
  amazon.aws.ec2_tag:
    region: "{{ ec2_region }}"
    resource: "{{ item.1.instance_id }}"
    state: present
    tags:
      Name: "{{ ec2_name_prefix }}-ansible-{{ sequence }}"
      Index: "{{ item[0] }}"
      Student: "student{{item.0 + 1}}"
      launch_time: "{{ item.1.launch_time }}"
  with_indexed_items:
    - "{{ control_output.instances }}"
  when: control_output.instances|length > 0