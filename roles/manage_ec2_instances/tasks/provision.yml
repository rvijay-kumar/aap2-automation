---
- name: ensure workshop folder {{ ec2_name_prefix }} exists
  file:
    path: "{{ playbook_dir }}/{{ ec2_name_prefix }}"
    state: directory

## These AWS resources are used for every workshop type
## This includes VPC, subnet, Security Group, Internet Gateway and route table
- name: provision aws resources
  include_tasks: resources/resources.yml

## This duplicates the above when network workshop uses 2 VPCs
- name: provision networking aws resources
  include_tasks: resources/resources_{{workshop_type}}.yml
  when: workshop_type == 'network' or workshop_type == 'demo'

- name: find ami for ansible control node
  amazon.aws.ec2_ami_info:
    region: "{{ ec2_region }}"
    owners: "{{ ec2_info[control_type].owners }}"
    filters:
      name: "{{ ec2_info[control_type].filter }}"
      architecture: "{{ ec2_info[control_type].architecture }}"
  register: amis

- name: save ami for ansible control node
  set_fact:
    ansible_control_node_ami: >
      {{ amis.images | selectattr('name', 'defined') | sort(attribute='name') | last }}

- name: enforce that major and minor version are at least RHEL 8.4
  assert:
    that:
      - ansible_control_node_ami.name[7]|int >= 4
      - ansible_control_node_ami.name[5]|int >= 8
    msg: "AWS ec2 image retrieved will not work with AAP 2, we need at least RHEL 8.4"

- name: Create the control clusters
  include_tasks: cluster_instances.yml
  loop: "{{ range(1, control_nodes|default(1) + 1 ) | list }}"
  loop_control:
    loop_var: sequence

## create private automation hub
- name: configure automation hub host
  include_tasks: 'automation_hub.yml'
  when: automation_hub|bool

## find AMI - amazon machine images dynamically
- name: find correct AMI
  include_tasks: 'ami_find/ami_find_{{ workshop_type }}.yml'

## Instance creation
- name: provision workshop instances
  include_tasks: 'instances/instances_{{ workshop_type }}.yml'

- name: create instructor_inventory, and student files
  include_tasks: create_inventory.yml